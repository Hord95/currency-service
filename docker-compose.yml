version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: currency_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d currency_db"]
      interval: 1s
      timeout: 1s
      retries: 5

  migrate:
    image: migrate/migrate
    command: >
      -path /migrations
      -database postgres://admin:password@postgres:5432/currency_db?sslmode=disable 
      up
    volumes:
      - ./currency/internal/migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy

  auth-generator:
    image: artyomyatsenko/final-task-auth-generator:latest #andrianovartemii/gm-test-task-auth-generator:latest
    #platfrom: linux/arm64
    ports:
      - "8082:8080"
    environment:
      AUTH_TOKEN_LIFETIME: 2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 1s
      timeout: 1s
      retries: 5
  cron:
    build:
      context: .
      dockerfile: ./deployment/local/Dockerfile
      args:
        - BUILD_TARGET=./currency/cmd/cron/main.go
    volumes:
      - ./deployment/local:/deployment/local  # Mount the local directory into the container
    depends_on:
      postgres:
        condition: service_healthy
    command: ["--config=/deployment/local/currency-local-config.yaml"]

  currency:
    build:
      context: .
      dockerfile: ./deployment/local/Dockerfile
      args:
        - BUILD_TARGET=./currency/cmd/currency/main.go
    volumes:
      - ./deployment/local:/deployment/local
    ports:
      - "8081:8081"
      - "8090:8090"
    depends_on:
      postgres:
        condition: service_healthy
    command: ["--config=/deployment/local/currency-local-config.yaml"]

  gateway:
    build:
      context: .
      dockerfile: ./deployment/local/Dockerfile
      args:
        - BUILD_TARGET=./gateway/cmd/gateway/main.go
    volumes:
      - ./deployment/local:/deployment/local
    ports:
      - "8080:8080"
    command: ["--config=/deployment/local/gateway-local-config.yaml"]

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - /home/hord/Github/currency-service/currency/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      - currency

  grafana:
    image: grafana/grafana:latest
    user: "1000" 
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8083:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command: ["--disable_metrics=btrfs"]
    restart: unless-stopped